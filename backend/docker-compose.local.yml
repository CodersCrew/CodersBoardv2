version: '3.7'

volumes:
  prometheus_data: {}
  grafana_data: {}

networks:
  coders-board-network:
    name: coders-board-network

services:
  postgres:
    image: postgres:12
    container_name: coders-board-postgres
    restart: always
    ports:
      - 5002:5432
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: coders-board
    networks:
      - coders-board-network
    #volumes:
    # - ../pgdata:/var/lib/postgresql/data #keep data outside container

  eventstore:
    container_name: coders-board-eventstore
    image: eventstore/eventstore
    environment:
      - EVENTSTORE_CLUSTER_SIZE=1
      - EVENTSTORE_INT_TCP_PORT=1112
      - EVENTSTORE_EXT_TCP_PORT=1113
      - EVENTSTORE_INT_HTTP_PORT=2112
      - EVENTSTORE_EXT_HTTP_PORT=2113
      - EVENTSTORE_RUN_PROJECTIONS=All
      - EVENTSTORE_START_STANDARD_PROJECTIONS=true
    ports:
      - "1112:1112"
      - "1113:1113"
      - "2112:2112"
      - "2113:2113"
    networks:
      - coders-board-network

  prometheus:
    image: prom/prometheus:v2.18.1
    container_name: coders-board-prometheus
    volumes:
      - ./monitoring/prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    restart: always
    ports:
      - 9090:9090
    networks:
      - coders-board-network
    labels:
      org.label-schema.group: "monitoring"
    depends_on:
      - prometheus-exporter-eventstore
      - prometheus-exporter-node
      - prometheus-exporter-cadvisor

  grafana:
    image: grafana/grafana:latest
    container_name: coders-board-grafana
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
    environment:
      - GF_SECURITY_ADMIN_USER=${ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${ADMIN_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
    restart: always
    ports:
      - 3020:3020
    networks:
      - coders-board-network
    labels:
      org.label-schema.group: "monitoring"

  prometheus-exporter-eventstore:
    image: marcinbudny/eventstore_exporter
    container_name: coders-board-prometheus-exporter-eventstore
    environment:
      - EVENTSTORE_URL=http://eventstore:2113
      - CLUSTER_MODE=single
      - EVENTSTORE_USER=admin
      - EVENTSTORE_PASSWORD=changeit
    restart: always
    labels:
      org.label-schema.group: "monitoring"
    networks:
      - coders-board-network

  prometheus-exporter-node:
    image: prom/node-exporter:v0.18.1
    container_name: coders-board-prometheus-exporter-node
    expose:
      - 9100
    ports:
      - 9100:9100
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)'
    restart: always
    networks:
      - coders-board-network
    labels:
      org.label-schema.group: "monitoring"

  prometheus-exporter-cadvisor:
    image: google/cadvisor:latest
    container_name: coders-board-prometheus-exporter-cadvisor
    ports:
      - 8080:8080
    expose:
      - 8080
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    restart: always
    networks:
      - coders-board-network
    labels:
      org.label-schema.group: "monitoring"